# Config file for an example Majora's Mask: Recompiled mod.

# Fields that end up in the mod's manifest.
[manifest]

# Unique ID of this mod. Pick something long enough that it'll never be the same as any other mod.
# The name displayed in the mod management menu is separate from this so this doesn't need to be human readable.
id = "yazmt_mm_playermodelmanager_fsmodels"

# Version of this mod.
version = "0.2.0"

# The name that will show up for this mod in the mod menu. This should be human readable.
display_name = "PlayerModelManager FS Addon"

# The description that will show up when this mod is displayed in the mod menu. This should be human readable.
description = """
File system support for PlayerModelManager.

Allows non-Fast64 player models (".zobj") to be read from here:

<recomp appdata folder>/mod_data/yazmt_z64_playermodelmanager/models/

Some of these models rely on assets from Ocarina of Time, which may cause corrupted textures when they are \
loaded into Majora's Mask.

To resolve these issues, place a US or JP 1.0, 1.1, or 1.2 OoT ROM into the yazmt_z64_playermodelmanager folder \
for this mod to extract the needed assets from.

If the extraction is successful, the corrupted textures will display correctly, and two new models, "Adult Link (OOT)" \
and "Young Link (OOT)", will appear in PlayerModelManager.

"""

# A short description that will show up in this mod's entry in the mod list. This should be human readable and kept short
# to prevent it from being cut off due to the limited space.
short_description = "File system support for PlayerModelManager."

# Authors of this mod.
authors = [ "Neirn" ]

# ID of the target recomp game.
game_id = "mm"

# Minimum version of the target recomp (e.g. Zelda 64: Recompiled) that this mod can run on.
minimum_recomp_version = "1.2.1"

# Dependency mods. Each entry is the mod's ID and then an optional minimum version of the dependency mod.
dependencies = [
# Example dependency:
#    "modname:1.0.0"
   "yazmt_mm_playermodelmanager",
   "yazmt_mm_corelib:0.1.1",
   "yazmt_mm_global_objects",
]

# Native libraries (e.g. DLLs) and the functions they export.
native_libraries = [
# Example native library:
   { name = "yazmt_mm_playermodelmanager_fsmodels_extlib", funcs = [
      "PMMZobj_setPMMDir",
      "PMMZobj_scanForDiskEntries",
      "PMMZobj_getNumDiskEntries",
      "PMMZobj_entryInternalNameLength",
      "PMMZobj_entryDisplayNameLength",
      "PMMZobj_entryAuthorNameLength",
      "PMMZobj_writeInternalNameToBuffer",
      "PMMZobj_writeDisplayNameToBuffer",
      "PMMZobj_writeAuthorNameToBuffer",
      "PMMZobj_getEntryFileSize",
      "PMMZobj_getEntryFileData",
      "PMMZobj_createDirectory",
      "PMMZobj_isDirectoryExist",
      "PMMZobj_readEntryU8",
      "PMMZobj_readEntryU16",
      "PMMZobj_readEntryU32",
      "PMMZobj_isModelType",
      "PMMZobj_clearDiskEntries",
      "PMMZobj_extractGameplayKeep",
      "PMMZobj_extractChildLink",
      "PMMZobj_extractAdultLink",
      "PMMZobj_tryLoadOOTROM",
      "PMMZobj_unloadOOTROM",
      "PMMZobj_isOOTRomLoaded"
   ] }
]

# Inputs to the mod tool.
[inputs]

# Input elf file to generate a mod from.
elf_path = "build/mod.elf"

# Output mod filename.
mod_filename = "yazmt_mm_playermodelmanager_fsmodels"

# Reference symbol files.
func_reference_syms_file = "Zelda64RecompSyms/mm.us.rev1.syms.toml"
data_reference_syms_files = [ "Zelda64RecompSyms/mm.us.rev1.datasyms.toml", "Zelda64RecompSyms/mm.us.rev1.datasyms_static.toml" ]

# Additional files to include in the mod.
additional_files = [ "thumb.png" ]

# Info for building the extlib. If this mod will have no extlib, remove this section and
# the build scripts disable extlib compilation and packaging. You can then safely delete 
# ./CMakeLists.txt, ./CMakePresets.json, and ./src/extlib/**
[extlib_compiling]

# # Name of the extlib. This information is passed to CMake as the target name for the extlib.
library_name = "yazmt_mm_playermodelmanager_fsmodels_extlib"

# Your CMake presets in this file should be designed to handle cross-compilation (using the provided
# Zig toolchain is recommended). When building the mod, CMake will be invoked 3 times to build
# extlib binaries for Windows, Macos, and Linux. The presets below are used to contruct 
# `user_build_config.json` (if it isn't present already), which is read to determine what CMake
# presets to use. The presets are organized in to groups, with each group containing "Windows", 
# "Macos", "Linux", and "Native" presets (more on the native preset below). The "Debug" preset group
# is the default, and the "Release" group is used by `create_thunderstore_package.py` when creating
# the Thunderstore release. You can also add more groups, using the make variable `EXTLIB_CMAKE_PRESET_GROUP`
# to choose the group when invoking make. You can change the presets in `user_build_config.json` in order use 
# build with non-default presets locally (presets from `CMakeUserPresets.json`, for example) without modifying 
# defaults here.

# "Native" presets are for building your mod using your local system tools/toolchain instead of cross-compilation. 
# This can be a useful feature for debugging. The build scripts will automatically select default native
# presets suitable for your system when creating your `user_build_config.json` file, and you can easily
# add new presets to `CMakePresets.json` or `CMakeUserPresets.json` for further expansion. Use `make native`
# to run a native build. You can also select what presets you wish to use for your native build by assigning
# the make variables `NATIVE_CMAKE_CONFIGURE_PRESET` and `NATIVE_CMAKE_BUILD_PRESET`.

# CMake presets for Debug builds. 
windows_debug_configure_preset = "zig-windows-x64-Debug"
windows_debug_build_preset = "zig-windows-x64-Debug"

macos_debug_configure_preset = "zig-macos-aarch64-Debug"
macos_debug_build_preset = "zig-macos-aarch64-Debug"

linux_debug_configure_preset = "zig-linux-x64-Debug"
linux_debug_build_preset = "zig-linux-x64-Debug"

# CMake presets for Release builds. Used to contruct preset groups in `user_build_config.json`.
windows_release_configure_preset = "zig-windows-x64-Release"
windows_release_build_preset = "zig-windows-x64-Release"

macos_release_configure_preset = "zig-macos-aarch64-Release"
macos_release_build_preset = "zig-macos-aarch64-Release"

linux_release_configure_preset = "zig-linux-x64-Release"
linux_release_build_preset = "zig-linux-x64-Release"

[[manifest.config_options]]
id = "sword1_c"
name = "Kokiri Sword (Child)"
description = """Set Kokiri Sword model on OOT Young Link.
"""
type = "Enum"
options = [ "Kokiri Sword (MM)", "Kokiri Sword (OOT)" ]
default = "Kokiri Sword (OOT)"

[[manifest.config_options]]
id = "sword1_a"
name = "Kokiri Sword (Adult)"
description = """Set Kokiri Sword model on OOT Adult Link.
"""
type = "Enum"
options = [ "Kokiri Sword (MM)", "Kokiri Sword (OOT)", "Master Sword" ]
default = "Master Sword"

[[manifest.config_options]]
id = "sword2_a"
name = "Razor Sword (Adult)"
description = """Set Razor Sword model on OOT Adult Link.
"""
type = "Enum"
options = [ "Razor Sword", "Master Sword" ]
default = "Master Sword"

[[manifest.config_options]]
id = "sword3_a"
name = "Gilded Sword (Adult)"
description = """Set Gilded Sword model on OOT Adult Link.
"""
type = "Enum"
options = [ "Gilded Sword", "Master Sword" ]
default = "Master Sword"

[[manifest.config_options]]
id = "sword5_c"
name = "Great Fairy Sword (Child)"
description = """Set Great Fairy Sword model on OOT Young Link.
"""
type = "Enum"
options = [ "Great Fairy Sword", "Biggoron Sword" ]
default = "Great Fairy Sword"

[[manifest.config_options]]
id = "sword5_a"
name = "Great Fairy Sword (Adult)"
description = """Set Great Fairy Sword model on OOT Adult Link.
"""
type = "Enum"
options = [ "Great Fairy Sword", "Biggoron Sword" ]
default = "Biggoron Sword"

[[manifest.config_options]]
id = "sword4_a"
name = "Fierce Deity's Sword (Adult)"
description = """Set Fierce Deity's Sword model on OOT Adult Link.
"""
type = "Enum"
options = [ "Fierce Deity's Sword", "Biggoron Sword" ]
default = "Biggoron Sword"

[[manifest.config_options]]
id = "shield2_c"
name = "Hero's Shield (Child)"
description = """Set Hero's Shield model on OOT Young Link.
"""
type = "Enum"
options = [ "Hero's Shield", "Deku Shield", "Hylian Shield" ]
default = "Hylian Shield"

[[manifest.config_options]]
id = "shield2_a"
name = "Hero's Shield (Adult)"
description = """Set Hero's Shield model on OOT Adult Link.
"""
type = "Enum"
options = [ "Hero's Shield", "Deku Shield", "Hylian Shield" ]
default = "Hylian Shield"

[[manifest.config_options]]
id = "shield3_c"
name = "Mirror Shield (Child)"
description = """Set Mirror Shield model on OOT Young Link.
"""
type = "Enum"
options = [ "Mirror Shield (MM)", "Mirror Shield (OOT)" ]
default = "Mirror Shield (OOT)"

[[manifest.config_options]]
id = "shield3_a"
name = "Mirror Shield (Adult)"
description = """Set Mirror Shield model on OOT Adult Link.
"""
type = "Enum"
options = [ "Mirror Shield (MM)", "Mirror Shield (OOT)" ]
default = "Mirror Shield (OOT)"

[[manifest.config_options]]
id = "bottle_c"
name = "Bottle (Child)"
description = """Set Bottle model on OOT Young Link.
"""
type = "Enum"
options = [ "Bottle (MM)", "Bottle (OOT)" ]
default = "Bottle (MM)"

[[manifest.config_options]]
id = "bottle_a"
name = "Bottle (Adult)"
description = """Set Bottle model on OOT Adult Link.
"""
type = "Enum"
options = [ "Bottle (MM)", "Bottle (OOT)" ]
default = "Bottle (MM)"

[[manifest.config_options]]
id = "deku_stick_c"
name = "Deku Stick (Child)"
description = """Set Deku Stick model on OOT Young Link.
"""
type = "Enum"
options = [ "Deku Stick (MM)", "Deku Stick (OOT)" ]
default = "Deku Stick (OOT)"

[[manifest.config_options]]
id = "deku_stick_a"
name = "Deku Stick (Adult)"
description = """Set Deku Stick model on OOT Adult Link.
"""
type = "Enum"
options = [ "Deku Stick (MM)", "Deku Stick (OOT)" ]
default = "Deku Stick (OOT)"

[[manifest.config_options]]
id = "hookshot_c"
name = "Hookshot (Child)"
description = """Set Hookshot model on OOT Young Link.
"""
type = "Enum"
options = [ "Hookshot (MM)", "Hookshot (OOT)" ]
default = "Hookshot (MM)"

[[manifest.config_options]]
id = "hookshot_a"
name = "Hookshot (Adult)"
description = """Set Hookshot model on OOT Adult Link.
"""
type = "Enum"
options = [ "Hookshot (MM)", "Hookshot (OOT)" ]
default = "Hookshot (OOT)"

[[manifest.config_options]]
id = "bow_c"
name = "Bow (Child)"
description = """Set bow model on OOT Young Link.
"""
type = "Enum"
options = [ "Hero's Bow", "Fairy Bow" ]
default = "Hero's Bow"

[[manifest.config_options]]
id = "bow_a"
name = "Bow (Adult)"
description = """Set bow model on OOT Adult Link.
"""
type = "Enum"
options = [ "Hero's Bow", "Fairy Bow" ]
default = "Fairy Bow"
